{"ast":null,"code":"import{createWeb3ReactRoot,Web3ReactProvider}from'@web3-react/core';import'inter-ui';import React,{StrictMode}from'react';import{isMobile}from'react-device-detect';import ReactDOM from'react-dom';import ReactGA from'react-ga';import{Provider}from'react-redux';import{HashRouter}from'react-router-dom';import Blocklist from'./components/Blocklist';import{NetworkContextName}from'./constants';import'./i18n';import App from'./pages/App';import store from'./state';import*as serviceWorkerRegistration from'./serviceWorkerRegistration';import ApplicationUpdater from'./state/application/updater';import ListsUpdater from'./state/lists/updater';import MulticallUpdater from'./state/multicall/updater';import TransactionUpdater from'./state/transactions/updater';import UserUpdater from'./state/user/updater';import ThemeProvider,{FixedGlobalStyle,ThemedGlobalStyle}from'./theme';import getLibrary from'./utils/getLibrary';var Web3ProviderNetwork=createWeb3ReactRoot(NetworkContextName);if(!!window.ethereum){window.ethereum.autoRefreshOnNetworkChange=false;}var GOOGLE_ANALYTICS_ID=process.env.REACT_APP_GOOGLE_ANALYTICS_ID;if(typeof GOOGLE_ANALYTICS_ID==='string'){ReactGA.initialize(GOOGLE_ANALYTICS_ID,{gaOptions:{storage:'none',storeGac:false}});ReactGA.set({anonymizeIp:true,customBrowserType:!isMobile?'desktop':'web3'in window||'ethereum'in window?'mobileWeb3':'mobileRegular'});}else{ReactGA.initialize('test',{testMode:true,debug:true});}window.addEventListener('error',function(error){ReactGA.exception({description:\"\".concat(error.message,\" @ \").concat(error.filename,\":\").concat(error.lineno,\":\").concat(error.colno),fatal:true});});function Updaters(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListsUpdater,null),/*#__PURE__*/React.createElement(UserUpdater,null),/*#__PURE__*/React.createElement(ApplicationUpdater,null),/*#__PURE__*/React.createElement(TransactionUpdater,null),/*#__PURE__*/React.createElement(MulticallUpdater,null));}ReactDOM.render(/*#__PURE__*/React.createElement(StrictMode,null,/*#__PURE__*/React.createElement(FixedGlobalStyle,null),/*#__PURE__*/React.createElement(Web3ReactProvider,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Web3ProviderNetwork,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Blocklist,null,/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(Updaters,null),/*#__PURE__*/React.createElement(ThemeProvider,null,/*#__PURE__*/React.createElement(ThemedGlobalStyle,null),/*#__PURE__*/React.createElement(HashRouter,null,/*#__PURE__*/React.createElement(App,null)))))))),document.getElementById('root'));serviceWorkerRegistration.unregister();","map":{"version":3,"sources":["/Users/mingtian/chain/nitaswap-interface/src/index.tsx"],"names":["createWeb3ReactRoot","Web3ReactProvider","React","StrictMode","isMobile","ReactDOM","ReactGA","Provider","HashRouter","Blocklist","NetworkContextName","App","store","serviceWorkerRegistration","ApplicationUpdater","ListsUpdater","MulticallUpdater","TransactionUpdater","UserUpdater","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","getLibrary","Web3ProviderNetwork","window","ethereum","autoRefreshOnNetworkChange","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","gaOptions","storage","storeGac","set","anonymizeIp","customBrowserType","testMode","debug","addEventListener","error","exception","description","message","filename","lineno","colno","fatal","Updaters","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport 'inter-ui'\nimport React, { StrictMode } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport Blocklist from './components/Blocklist'\nimport { NetworkContextName } from './constants'\nimport './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport UserUpdater from './state/user/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\nimport getLibrary from './utils/getLibrary'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false\n}\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\n    gaOptions: {\n      storage: 'none',\n      storeGac: false\n    }\n  })\n  ReactGA.set({\n    anonymizeIp: true,\n    customBrowserType: !isMobile ? 'desktop' : 'web3' in window || 'ethereum' in window ? 'mobileWeb3' : 'mobileRegular'\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nwindow.addEventListener('error', error => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true\n  })\n})\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <UserUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <FixedGlobalStyle />\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Blocklist>\n          <Provider store={store}>\n            <Updaters />\n            <ThemeProvider>\n              <ThemedGlobalStyle />\n              <HashRouter>\n                <App />\n              </HashRouter>\n            </ThemeProvider>\n          </Provider>\n        </Blocklist>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.unregister()\n"]},"metadata":{},"sourceType":"module"}